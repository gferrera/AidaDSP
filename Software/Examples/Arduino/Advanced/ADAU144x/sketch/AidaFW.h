#ifndef _AIDAFW_H_
#define _AIDAFW_H_


#include <AidaDSP.h>

/*AIDAFW.h - Main include file for the AIDA audio DSP library Copyright (c) 2015 AIDA Team.  All right reserved.
This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version.
This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
You should have received a copy of the GNU Lesser General Public  License along with this library; if not, write to the Free Software  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA  */


#define DEVICE_ADDR 0x70 // Here insert 8bit I2C address (write mode) for ADAU144x (0x70, 0x74, 0x78, 0x7C)
#define DEVICE_ADDR_7bit DEVICE_ADDR>>1

#define NonModRamAllocAddr 	0
#define NonModRamAllocSize 	4
const PROGMEM unsigned char NonModRamAllocData[4]={0x00, 0x00, 0x1F, 0xFE}; 


#define Start_Pulse_SelectAddr1 	57888
#define Start_Pulse_SelectSize1 	2
const PROGMEM unsigned char Start_Pulse_SelectData1[2]={0x00, 0x1C};


#define Core_Run_BitAddr1 	57896
#define Core_Run_BitSize1 	2
const PROGMEM unsigned char Core_Run_BitData1[2]={0x00, 0x00};


#define progDataAddr	8192
#define progDataSize		894
const PROGMEM unsigned char progDataData[894]={0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x03, 0x80, 0x00, 0x00, 0x00, 0x06, 0x04, 0xD0, 0x00, 0x00, 0x00, 0x06, 0x04, 0xB0, 0x00, 0x00, 0x00, 0x06, 0x05, 0x50, 0x00, 0x00, 0x00, 0x06, 0x05, 0x70, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xD1, 0x08, 0x20, 0x00, 0x06, 0x04, 0xE0, 0x00, 0x00, 0x00, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x03, 0xA0, 0x0C, 0x00, 0x00, 0x06, 0x00, 0xC0, 0x00, 0xE2, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xA0, 0x07, 0x20, 0x08, 0x00, 0x00, 0x00, 0x06, 0xA0, 0x00, 0x07, 0xFF, 0x80, 0x00, 0xC0, 0x00, 0x06, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x04, 0x00, 0x00, 0x00, 0x00, 0x06, 0x03, 0x00, 0x1F, 0x00, 0x27, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x03, 0xA0, 0x1B, 0x00, 0x00, 0x07, 0xFF, 0xA0, 0x01, 0x20, 0x00, 0x07, 0xFE, 0xE0, 0x01, 0x03, 0x00, 0x00, 0x00, 0x18, 0x06, 0x00, 0x00, 0x06, 0x04, 0x20, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xD0, 0x00, 0x20, 0x00, 0x07, 0xFE, 0xE0, 0x07, 0x02, 0x00, 0x00, 0x00, 0x51, 0x1F, 0x20, 0x00, 0x00, 0x00, 0x11, 0x08, 0x22, 0x00, 0x00, 0x00, 0x00, 0x09, 0xA0, 0x00, 0x07, 0xFF, 0x91, 0x18, 0x22, 0x00, 0x00, 0x00, 0x00, 0x08, 0xA0, 0x00, 0x00, 0x00, 0x20, 0x00, 0xEA, 0x00, 0x00, 0x00, 0x60, 0x00, 0xF2, 0x00, 0x00, 0x00, 0x20, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xB0, 0x01, 0x21, 0x00, 0x00, 0x00, 0x10, 0x00, 0xA1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0x91, 0x08, 0x22, 0x40, 0x00, 0x00, 0x80, 0x00, 0xE2, 0x00, 0x00, 0x00, 0x60, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9F, 0xFF, 0x20, 0x00, 0x07, 0xFF, 0x91, 0x08, 0x22, 0x00, 0x00, 0x00, 0xA0, 0x00, 0xE2, 0x00, 0x00, 0x00, 0xA0, 0x0A, 0x20, 0x00, 0x00, 0x01, 0x20, 0x00, 0xE2, 0x00, 0x00, 0x01, 0x60, 0x0E, 0x20, 0x00, 0x00, 0x01, 0x40, 0x0F, 0x22, 0x00, 0x00, 0x01, 0x20, 0x0B, 0x22, 0x00, 0x00, 0x01, 0x00, 0x0C, 0x22, 0x00, 0x00, 0x00, 0xE0, 0x0D, 0x22, 0x00, 0x00, 0x01, 0x80, 0x00, 0xE2, 0x00, 0x00, 0x00, 0x00, 0x10, 0xA0, 0x00, 0x00, 0x01, 0xD1, 0x08, 0x20, 0x00, 0x00, 0x01, 0xA0, 0x00, 0xE2, 0x00, 0x00, 0x01, 0x91, 0x08, 0x20, 0x00, 0x00, 0x01, 0xC0, 0x00, 0xE2, 0x80, 0x03, 0xFF, 0xC0, 0x13, 0x20, 0x00, 0x03, 0xFF, 0xC0, 0x12, 0x34, 0x00, 0x03, 0xFF, 0xE0, 0x11, 0x22, 0x00, 0x07, 0xFE, 0xE0, 0x12, 0x02, 0x00, 0x07, 0xFE, 0xE0, 0x13, 0x12, 0x00, 0x00, 0x01, 0xA0, 0x12, 0x20, 0x00, 0x00, 0x05, 0x40, 0x00, 0xE2, 0x00, 0x00, 0x05, 0x40, 0x00, 0xC0, 0x00, 0x00, 0x05, 0x5F, 0xFF, 0x20, 0x00, 0x00, 0x06, 0xE0, 0x00, 0xE2, 0x00, 0x00, 0x06, 0xC0, 0x00, 0xF2, 0x00, 0x00, 0x06, 0xD1, 0x0A, 0x20, 0x00, 0x00, 0x06, 0xF1, 0x0A, 0x34, 0x00, 0x07, 0xFF, 0xD1, 0x08, 0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x60, 0x00, 0xF6, 0x00, 0x00, 0x05, 0xD1, 0x08, 0x20, 0x08, 0x00, 0x05, 0xE0, 0x00, 0xE2, 0x00, 0x00, 0x05, 0x91, 0x08, 0x20, 0x00, 0x07, 0xFF, 0xA0, 0x36, 0x22, 0x67, 0x00, 0x05, 0xA0, 0x00, 0xE2, 0x00, 0x00, 0x06, 0x71, 0x08, 0x22, 0x48, 0x00, 0x06, 0x71, 0x08, 0x20, 0x00, 0x00, 0x05, 0xA0, 0x00, 0xE2, 0x27, 0x07, 0xFF, 0xA0, 0x35, 0x20, 0x00, 0x00, 0x05, 0xE0, 0x00, 0xE2, 0x27, 0x00, 0x05, 0xF1, 0x08, 0x20, 0x08, 0x07, 0xFF, 0xF1, 0x08, 0x22, 0x40, 0x00, 0x05, 0xE0, 0x00, 0xE2, 0x26, 0x00, 0x05, 0xB1, 0x1A, 0x20, 0x00, 0x00, 0x06, 0x80, 0x00, 0xE2, 0x00, 0x00, 0x06, 0xA0, 0x00, 0xF2, 0x00, 0x00, 0x06, 0x80, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x15, 0xA1, 0x00, 0x07, 0xFF, 0x91, 0x08, 0x20, 0x00, 0x00, 0x00, 0x00, 0x14, 0xA1, 0x00, 0x07, 0xFF, 0x91, 0x08, 0x22, 0x40, 0x00, 0x06, 0x00, 0x00, 0xE2, 0x00, 0x00, 0x06, 0xA0, 0x00, 0xC0, 0x00, 0x00, 0x06, 0x1F, 0xFF, 0x20, 0x00, 0x07, 0xFF, 0x91, 0x08, 0x22, 0x00, 0x00, 0x06, 0x40, 0x00, 0xE2, 0x00, 0x00, 0x06, 0x40, 0x00, 0xC0, 0x00, 0x00, 0x05, 0x5F, 0xFF, 0x20, 0x00, 0x00, 0x05, 0x60, 0x00, 0xE2, 0x00, 0x00, 0x05, 0x60, 0x00, 0xC0, 0x00, 0x00, 0x05, 0x71, 0x08, 0x20, 0x00, 0x00, 0x07, 0xC0, 0x00, 0xE2, 0x00, 0x07, 0xFE, 0xE0, 0x3C, 0x02, 0x00, 0x07, 0xFE, 0xE0, 0x3D, 0x12, 0x00, 0x00, 0x05, 0x7F, 0xFF, 0x20, 0x00, 0x00, 0x07, 0x80, 0x00, 0xE2, 0x00, 0x00, 0x07, 0xA0, 0x00, 0xF2, 0x00, 0x00, 0x07, 0x51, 0x08, 0x20, 0x00, 0x00, 0x07, 0x40, 0x37, 0x22, 0x40, 0x00, 0x07, 0xA0, 0x37, 0x22, 0x00, 0x00, 0x07, 0x11, 0x08, 0x34, 0x00, 0x00, 0x07, 0x00, 0x37, 0x22, 0x40, 0x00, 0x07, 0x80, 0x37, 0x22, 0x00, 0x00, 0x07, 0x20, 0x00, 0xE2, 0x00, 0x00, 0x07, 0x60, 0x00, 0xF2, 0x00, 0x07, 0xFE, 0xE0, 0x3A, 0x02, 0x00, 0x07, 0xFE, 0xE0, 0x3B, 0x12, 0x00, 0x00, 0x07, 0xD1, 0x08, 0x20, 0x00, 0x04, 0x18, 0x00, 0x00, 0xE2, 0x00, 0x00, 0x07, 0xD1, 0x08, 0x20, 0x00, 0x04, 0x18, 0x20, 0x00, 0xE2, 0x00, 0x00, 0x07, 0xD1, 0x08, 0x20, 0x00, 0x04, 0x18, 0x40, 0x00, 0xE2, 0x00, 0x00, 0x07, 0xD1, 0x08, 0x20, 0x00, 0x04, 0x18, 0x60, 0x00, 0xE2, 0x00, 0x00, 0x07, 0xD1, 0x08, 0x20, 0x00, 0x04, 0x18, 0x80, 0x00, 0xE2, 0x00, 0x00, 0x07, 0xC0, 0x3E, 0x20, 0x00, 0x00, 0x07, 0xE0, 0x00, 0xE2, 0x00, 0x00, 0x07, 0xF1, 0x08, 0x20, 0x00, 0x04, 0x18, 0xA0, 0x00, 0xE2, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x03, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};


#define SerialInputModesAddr 	57344
#define SerialInputModesSize 	18
const PROGMEM unsigned char SerialInputModesData[18]={0xA4, 0x00, 0x24, 0x00, 0x24, 0x00, 0x24, 0x00, 0x24, 0x00, 0x24, 0x00, 0x24, 0x00, 0x24, 0x00, 0x24, 0x00};


#define SerialOutputModesAddr 	57408
#define SerialOutputModesSize 	18
const PROGMEM unsigned char SerialOutputModesData[18]={0x24, 0x00, 0x24, 0x00, 0xA4, 0x02, 0x24, 0x00, 0x24, 0x00, 0x24, 0x00, 0x24, 0x00, 0x24, 0x00, 0xA4, 0x00};


#define HighSpeedSlaveInterfaceModeAddr 	57417
#define HighSpeedSlaveInterfaceModeSize 	2
const PROGMEM unsigned char HighSpeedSlaveInterfaceModeData[2]={0x00, 0x00};


#define RoutingMatrixASRCInputDataSelectorAddr 	57472
#define RoutingMatrixASRCInputDataSelectorSize 	16
const PROGMEM unsigned char RoutingMatrixASRCInputDataSelectorData[16]={0x00, 0x3F, 0x00, 0x3F, 0x00, 0x3F, 0x00, 0x3F, 0x00, 0x3F, 0x00, 0x3F, 0x00, 0x3F, 0x00, 0x3F};


#define RoutingMatrixASRCOutputRateSelectorAddr 	57480
#define RoutingMatrixASRCOutputRateSelectorSize 	16
const PROGMEM unsigned char RoutingMatrixASRCOutputRateSelectorData[16]={0x00, 0x10, 0x00, 0x10, 0x00, 0x10, 0x00, 0x10, 0x00, 0x3F, 0x00, 0x3F, 0x00, 0x3F, 0x00, 0x3F};


#define RoutingMatrixSerialOutputDataSelectorAddr 	57488
#define RoutingMatrixSerialOutputDataSelectorSize 	24
const PROGMEM unsigned char RoutingMatrixSerialOutputDataSelectorData[24]={0x00, 0x3F, 0x00, 0x3F, 0x00, 0x3F, 0x00, 0x3F, 0x00, 0x10, 0x00, 0x11, 0x00, 0x3F, 0x00, 0x3F, 0x00, 0x3F, 0x00, 0x3F, 0x00, 0x3F, 0x00, 0x12};


#define SPDIFRegsAddr 	57536
#define SPDIFRegsSize 	24
const PROGMEM unsigned char SPDIFRegsData[24]={0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01};


#define ASRC1Addr 	57601
#define ASRC1Size 	2
const PROGMEM unsigned char ASRC1Data[2]={0x00, 0x00};


#define ASRC2Addr 	57665
#define ASRC2Size 	2
const PROGMEM unsigned char ASRC2Data[2]={0x00, 0x00};


#define SerialInFlexModesAddr 	57728
#define SerialInFlexModesSize 	48
const PROGMEM unsigned char SerialInFlexModesData[48]={0x01, 0x3F, 0x01, 0x3F, 0x01, 0x3F, 0x01, 0x3F, 0x01, 0x3F, 0x01, 0x3F, 0x01, 0x3F, 0x01, 0x3F, 0x01, 0x3F, 0x01, 0x3F, 0x01, 0x3F, 0x01, 0x3F, 0x01, 0x3F, 0x01, 0x3F, 0x01, 0x3F, 0x01, 0x3F, 0x01, 0x3F, 0x01, 0x3F, 0x01, 0x3F, 0x01, 0x3F, 0x01, 0x3F, 0x01, 0x3F, 0x01, 0x3F, 0x01, 0x3F};


#define SerialOutFlexModesAddr 	57792
#define SerialOutFlexModesSize 	64
const PROGMEM unsigned char SerialOutFlexModesData[64]={0x80, 0x80, 0x84, 0x84, 0x88, 0x88, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80};


#define DSPRegsAddr 	57856
#define DSPRegsSize 	84
const PROGMEM unsigned char DSPRegsData[84]={0x9A, 0x1E, 0x8C, 0xE4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x01, 0x06, 0x71, 0x00, 0x00, 0x10, 0x00, 0x00, 0x01, 0x00, 0x00, 0x20, 0x00, 0x00, 0x1C, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C};


#define OtherDSPModes1Addr 	57920
#define OtherDSPModes1Size 	4
const PROGMEM unsigned char OtherDSPModes1Data[4]={0x00, 0x3F, 0x00, 0x00};


#define OtherDSPModes2Addr 	57927
#define OtherDSPModes2Size 	12
const PROGMEM unsigned char OtherDSPModes2Data[12]={0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};


#define EnableRegisterAddr 	57984
#define EnableRegisterSize 	2
const PROGMEM unsigned char EnableRegisterData[2]={0x01, 0x27};


#define ParamAddr 	0
#define ParamSize 	252
const PROGMEM unsigned char ParamData[252]={
0x00, 0x00, 0x1F, 0xFE,
0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0xFF,
0x00, 0x02, 0xAA, 0xAB,
0x00, 0x80, 0x00, 0x00,
0x00, 0x00, 0x85, 0xF7,
0x00, 0x01, 0x0B, 0xEF,
0x00, 0x00, 0x85, 0xF7,
0x00, 0xF2, 0x94, 0xEF,
0x0F, 0x8B, 0x53, 0x33,
0x00, 0x00, 0x00, 0x01,
0x00, 0x80, 0x00, 0x00, // 17 Gain Target
0x00, 0x00, 0x00, 0x00, // 18
0x00, 0x00, 0x00, 0x00, // 19
0x00, 0x80, 0x00, 0x00,
0x00, 0x8A, 0x8A, 0x1B,
0x00, 0x95, 0xF2, 0x5F,
0x00, 0xA2, 0x4B, 0x17,
0x00, 0xAF, 0xA8, 0x10,
0x00, 0xBE, 0x1E, 0xAC,
0x00, 0xCD, 0xC6, 0x32,
0x00, 0xDE, 0xB7, 0xB3,
0x00, 0xEF, 0x8F, 0x58,
0x01, 0x00, 0x68, 0xBB,
0x01, 0x12, 0x71, 0x78,
0x01, 0x25, 0xBE, 0xEA,
0x01, 0x3A, 0x67, 0xE9,
0x01, 0x50, 0x84, 0xF0,
0x01, 0x68, 0x30, 0x16,
0x01, 0x81, 0x85, 0x65,
0x01, 0x92, 0x6F, 0x65,
0x01, 0x70, 0x2A, 0x2F,
0x01, 0x50, 0xD0, 0x13,
0x01, 0x34, 0x21, 0x77,
0x01, 0x19, 0xE4, 0x1E,
0x00, 0xE3, 0xEC, 0x6C,
0x00, 0xA1, 0x5B, 0x85,
0x00, 0x72, 0x3B, 0x7C,
0x00, 0x50, 0xDE, 0xCD,
0x00, 0x39, 0x40, 0x76,
0x00, 0x28, 0x87, 0xFB,
0x00, 0x1C, 0xB1, 0xA2,
0x00, 0x14, 0x50, 0x4F,
0x00, 0x0E, 0x61, 0x89,
0x00, 0x0A, 0x2E, 0x54,
0x00, 0x07, 0x35, 0x24,
0x00, 0x05, 0x1A, 0x42,
0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x12,
0x00, 0x00, 0x4E, 0xB0,
0x00, 0x00, 0x01, 0xE0,
0x00, 0x00, 0x07, 0x1C,
0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00,
0x0F, 0x80, 0x00, 0x00};


#define ModuloDataMemoryRegisterAddr 	57887
#define ModuloDataMemoryRegisterSize 	2
const PROGMEM unsigned char ModuloDataMemoryRegisterData[2]={0x1F, 0xFE};


#define NonModuloRAMAddr 	24574
#define NonModuloRAMSize 	8
const PROGMEM unsigned char NonModuloRAMData[8]={0x00, 0x7F, 0xF2, 0x59, 0x00, 0x00, 0x0D, 0xA7};


#define Start_Pulse_SelectAddr2 	57888
#define Start_Pulse_SelectSize2 	2
const PROGMEM unsigned char Start_Pulse_SelectData2[2]={0x00, 0x00};


#define Core_Run_BitAddr2 	57896
#define Core_Run_BitSize2 	2
const PROGMEM unsigned char Core_Run_BitData2[2]={0x00, 0x01};


#define R23_Dejitter_WindowAddr 	57889
#define R23_Dejitter_WindowSize 	2
const PROGMEM unsigned char R23_Dejitter_WindowData[2]={0x00, 0x00};


#define R24_Dejitter_WindowAddr 	57889
#define R24_Dejitter_WindowSize 	2
const PROGMEM unsigned char R24_Dejitter_WindowData[2]={0x00, 0x05};


#define Level2		55
#define Tone1		8
#define GenFilter1	11
#define Delay1		16
#define Compressor1	20
#define Single1		17
#define Inv1		62


void program_download() {
	//AIDA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_7bit, NonModRamAllocAddr, NonModRamAllocSize, NonModRamAllocData );
	AIDA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_7bit, Start_Pulse_SelectAddr1, Start_Pulse_SelectSize1, Start_Pulse_SelectData1 );
	AIDA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_7bit, Core_Run_BitAddr1, Core_Run_BitSize1, Core_Run_BitData1 );
	AIDA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_7bit, progDataAddr, progDataSize, progDataData );
	AIDA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_7bit, SerialInputModesAddr, SerialInputModesSize, SerialInputModesData );
	AIDA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_7bit, SerialOutputModesAddr, SerialOutputModesSize, SerialOutputModesData );
	AIDA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_7bit, HighSpeedSlaveInterfaceModeAddr, HighSpeedSlaveInterfaceModeSize, HighSpeedSlaveInterfaceModeData );
	AIDA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_7bit, RoutingMatrixASRCInputDataSelectorAddr, RoutingMatrixASRCInputDataSelectorSize, RoutingMatrixASRCInputDataSelectorData );
	AIDA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_7bit, RoutingMatrixASRCOutputRateSelectorAddr, RoutingMatrixASRCOutputRateSelectorSize, RoutingMatrixASRCOutputRateSelectorData );
	AIDA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_7bit, RoutingMatrixSerialOutputDataSelectorAddr, RoutingMatrixSerialOutputDataSelectorSize, RoutingMatrixSerialOutputDataSelectorData );
	AIDA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_7bit, SPDIFRegsAddr, SPDIFRegsSize, SPDIFRegsData );
	AIDA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_7bit, ASRC1Addr, ASRC1Size, ASRC1Data );
	AIDA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_7bit, ASRC2Addr, ASRC2Size, ASRC2Data );
	AIDA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_7bit, SerialInFlexModesAddr, SerialInFlexModesSize, SerialInFlexModesData );
	AIDA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_7bit, SerialOutFlexModesAddr, SerialOutFlexModesSize, SerialOutFlexModesData );
	AIDA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_7bit, DSPRegsAddr, DSPRegsSize, DSPRegsData );
	AIDA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_7bit, OtherDSPModes1Addr, OtherDSPModes1Size, OtherDSPModes1Data );
	AIDA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_7bit, OtherDSPModes2Addr, OtherDSPModes2Size, OtherDSPModes2Data );
	AIDA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_7bit, EnableRegisterAddr, EnableRegisterSize, EnableRegisterData );
	AIDA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_7bit, ParamAddr, ParamSize, ParamData );
	AIDA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_7bit, ModuloDataMemoryRegisterAddr, ModuloDataMemoryRegisterSize, ModuloDataMemoryRegisterData );
	AIDA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_7bit, NonModuloRAMAddr, NonModuloRAMSize, NonModuloRAMData );
	AIDA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_7bit, Start_Pulse_SelectAddr2, Start_Pulse_SelectSize2, Start_Pulse_SelectData2 );
	AIDA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_7bit, Core_Run_BitAddr2, Core_Run_BitSize2, Core_Run_BitData2 );
	AIDA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_7bit, R23_Dejitter_WindowAddr, R23_Dejitter_WindowSize, R23_Dejitter_WindowData );
	AIDA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_7bit, R24_Dejitter_WindowAddr, R24_Dejitter_WindowSize, R24_Dejitter_WindowData );
}


#endif
